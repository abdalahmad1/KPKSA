/* jQuery(window).on('load', function () {
  jQuery('#loader').fadeOut(100);
}); */


function copyToClipboard(element) {
  var $temp = $("<input>");
  $("body").append($temp);
  $temp.val($(element).text()).select();
  document.execCommand("copy");
  $temp.remove();
}


function myFunction() {
  var copyText = document.getElementById("myInput");
  copyText.select();
  copyText.setSelectionRange(0, 99999);
  navigator.clipboard.writeText(copyText.value);
  
  var tooltip = document.getElementById("myTooltip");
  tooltip.innerHTML = "Copied: " + copyText.value;
}

function outFunc() {
  var tooltip = document.getElementById("myTooltip");
  tooltip.innerHTML = "Copy to clipboard";
}



$(function () {
  // CONFIG
  let visibilityIds = ['#counters_1', '#counters_2', '#counters_3']; //must be an array, could have only one element
  let counterClass = '.counter';
  let defaultSpeed = 3000; //default value

  // END CONFIG

  //init if it becomes visible by scrolling
  $(window).on('scroll', function () {
      getVisibilityStatus();
  });

  //init if it's visible by page loading
  getVisibilityStatus();

  function getVisibilityStatus() {
      elValFromTop = [];
      var windowHeight = $(window).height(),
          windowScrollValFromTop = $(this).scrollTop();

      visibilityIds.forEach(function (item, index) { //Call each class
          try { //avoid error if class not exist
              elValFromTop[index] = Math.ceil($(item).offset().top);
          } catch (err) {
              return;
          }
          // if the sum of the window height and scroll distance from the top is greater than the target element's distance from the top, 
          //it should be in view and the event should fire, otherwise reverse any previously applied methods
          if ((windowHeight + windowScrollValFromTop) > elValFromTop[index]) {
              counter_init(item);
          }
      });
  }

  function counter_init(groupId) {
      let num, speed, direction, index = 0;
      $(counterClass).each(function () {
          num = $(this).attr('data-TargetNum');
          speed = $(this).attr('data-Speed');
          direction = $(this).attr('data-Direction');
          easing = $(this).attr('data-Easing');
          if (speed == undefined) speed = defaultSpeed;
          $(this).addClass('c_' + index); //add a class to recognize each counter
          doCount(num, index, speed, groupId, direction, easing);
          index++;
      });
  }

  function doCount(num, index, speed, groupClass, direction, easing) {
      let className = groupClass + ' ' + counterClass + '.' + 'c_' + index;
      if(easing == undefined) easing = "swing";
      $(className).animate({
          num
      }, {
          duration: +speed,
          easing: easing,
          step: function (now) {
              if (direction == 'reverse') {
                  $(this).text(num - Math.floor(now));
              } else {
                  $(this).text(Math.floor(now));
              }
          },
          complete: doCount
      });
  }
})

jQuery(document).ready(function () {

  jQuery(".copy_cite").click(function () {
    jQuery('.copied_text').fadeIn();
    setTimeout(function() { 
      jQuery('.copied_text').fadeOut();
  }, 2000);
 
  });

jQuery(".search_icon").click(function () {
  jQuery(".search_wrapper").toggleClass('show');
  //jQuery(".outer_search_wrapper").toggleClass('show');
  
});
jQuery(".search_wrapper .close").click(function () {
  jQuery(".search_wrapper").toggleClass('show');
  //jQuery(".outer_search_wrapper").toggleClass('show');
});

jQuery(".hamburger_wrapper").click(function () {
  jQuery(this).toggleClass('open');
  jQuery(".mobile_nav_wrapper").toggleClass('open');
 
});


jQuery('.mobile_nav .main_menu li.menu-item-has-children>a').on('click', function () {
  jQuery(this).removeAttr('href');
  var element = jQuery(this).parent('li');
  if (element.hasClass('open')) {
    element.removeClass('open');
    element.find('li').removeClass('open');
    element.find('ul').slideUp();
  } else {
    element.addClass('open');
    element.children('ul').slideDown();
    element.siblings('li').children('ul').slideUp();
    element.siblings('li').removeClass('open');
    element.siblings('li').find('li').removeClass('open');
    element.siblings('li').find('ul').slideUp();
  }
});

/* jQuery("section.hero .slider").slick({

  slidesToShow: 1,
  infinite: true,
  autoplay: true,
  arrows: false,
  dots:true,
  pauseOnHover: false,
  rows: 0,
  autoplaySpeed: 10000
}); */
jQuery('section.hero .slider').on('init', function(event, slick) {
  jQuery('.loader_wrapper').fadeOut(); // Hide the loader initially
}).slick({
  slidesToShow: 1,
  infinite: true,
  autoplay: true,
  arrows: false,
  dots:true,
  pauseOnHover: false,
  rows: 0,
  autoplaySpeed: 10000
});



jQuery("section.initiatives .initiative_slider").slick({

  slidesToShow: 4,
  infinite: true,
  autoplay: true,
  arrows: true,
  slidesToScroll: 1,
  dots:false,
  pauseOnHover: false,

  responsive: [
    {
      breakpoint: 1450,
      settings: {
        slidesToShow: 3,
        slidesToScroll: 1,
        
      }
    },
    {
      breakpoint: 1024,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 1,
        
      }
    },
    {
      breakpoint: 600,
      settings: {
        slidesToShow: 2,
        slidesToScroll: 1
      }
    },
    {
      breakpoint: 480,
      settings: {
        slidesToShow: 1,
        slidesToScroll: 1
      }
    }
   
  ]
});

wow = new WOW(
  {
  boxClass:     'wow',      // default
  animateClass: 'animated', // default
  offset:       0,          // default
  mobile:       false,       // default
  live:         true        // default
}
)
wow.init();
});